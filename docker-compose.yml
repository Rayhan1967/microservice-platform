services:
  mongodb:
    image: mongo:latest
    container_name: microservices-mongodb
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_DATABASE=microservices
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservices-network

  user-service:
    build: ./user-service
    container_name: user-service-docker
    ports:
      - "3009:3001"
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/userdb
      - JWT_SECRET=your-super-secret-jwt-key
    depends_on:
      - mongodb
    networks:
      - microservices-network

  product-service:
    build: ./product-service
    container_name: product-service-docker
    ports:
      - "3010:3002"
    environment:
      - PORT=3002
      - MONGODB_URI=mongodb://mongodb:27017/productdb
    depends_on:
      - mongodb
    networks:
      - microservices-network

volumes:
  mongodb_data:

networks:
  microservices-network:
    driver: bridge

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - microservices-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3013:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - microservices-network

volumes:
  grafana-storage:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - microservices-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./monitoring/logstash:/usr/share/logstash/pipeline
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    networks:
      - microservices-network
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - microservices-network
    depends_on:
      - elasticsearch

volumes:
  elasticsearch_data:
